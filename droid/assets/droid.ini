# -------------------------------------------------
# Grain
# -------------------------------------------------

# GRAIN-PARAM-CLOCK - Clock Multipliyer
[encoder]
notch = 0.05
mode = 2
startvalue = 0
color = 0.4 # Green
negativecolor = 0.73 # Orange
encoder = E1.1
select = _MODE_SELECT_POS * 100
selectat = 100
output = _GRAIN_CTRL # --out --cv

# GRAIN-LOOP-CLK
[switch]
input1 = 0
input2 = 0.0625
input3 = 0.125
input4 = 0.25
input5 = 0.5
input6 = 1
input7 = 2
input8 = 4
input9 = 8
input10 = 16
input11 = 32
offset = _GRAIN_CTRL * -11
output1 = _GRAIN_CTRL_DIV

[compare]
input = _GRAIN_CTRL
compare = 0
ifgreater = 1
ifless = 2
ifequal = 0
output = _GRAIN_MODE

# GRAIN-CLK-LOOP
[select]
input = _GRAIN_CTRL_DIV
select = _GRAIN_MODE
selectat = 2
output = _GRAIN_CLK_DIV

# GRAIN-CLK-GRANULAR
[select]
input = _GRAIN_CTRL
select = _GRAIN_MODE
selectat = 1
output = _GRAIN_CLK_MULT

[clocktool]
dutycycle = 0.1
clock = _CLOCK
reset = _RESET
divide = _GRAIN_CLK_DIV
multiply = _GRAIN_CLK_MULT * 32 + 0
delay = 0
output = _GRAIN_TRIG

[bernoulli]
input = _GRAIN_TRIG
distribution = _GRAIN_CTRL * 2 # Values over 1 and below 0 are ignored.
output1 = _GRAIN_TRIG_MULT

[mixer]
input1 = _GRAIN_TRIG_LOOP
input2 = _GRAIN_TRIG_GRANULAR
output = _GRAIN_TRIG

[random]
clock = _GRAIN_TRIG
minimum = 0
maximum = 1
output = _GRAIN_RANDOM

[cvlooper]
gatein = _GRAIN_TRIG
cvin = _GRAIN_RANDOM
clock = _CLOCK * 0.5
reset = _RESET
length = 16
loopswitch = I3
cvout = _GRAIN_CV_OUT
gateout = _GRAIN_TRIG_OUT

[copy]
input = _GRAIN_CV_OUT * 0.1
output = O3

[copy]
input = _GRAIN_TRIG_OUT
output = O4
